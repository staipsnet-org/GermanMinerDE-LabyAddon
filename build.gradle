buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url = "http://files.minecraftforge.net/maven"
        }
        flatDir {
            dirs 'libs'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "1.0"
group = "com.yourname.modid" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "modid"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.0.2512"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    compile group: 'org.json', name: 'json', version: '20201115'
    compile group: 'javax.websocket', name: 'javax.websocket-client-api', version: '1.1'
    compile group: 'org.glassfish.tyrus', name: 'tyrus-client', version: '1.1'
    compile group: 'org.glassfish.tyrus', name: 'tyrus-server', version: '1.1'
    testCompile group: 'org.glassfish.tyrus', name: 'tyrus-container-grizzly', version: '1.1'
    compile files('libs/opus-jni-java-1.0.jar')
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    shade group: 'org.json', name: 'json', version: '20201115'
    //shade group: 'javax.websocket', name: 'javax.websocket-client-api', version: '1.1'
    shade group: 'org.glassfish.tyrus', name: 'tyrus-client', version: '1.1'
    shade group: 'org.glassfish.tyrus', name: 'tyrus-server', version: '1.1'
    shade group: 'org.glassfish.tyrus', name: 'tyrus-container-grizzly', version: '1.1'
    shade files('libs/opus-jni-java-1.0.jar')
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

reobf {
    jar {
        useNotchSrg()
    }
}